devtools::document()
devtools::document()
check()
devtools::check()
devtools::check()
document()
devtools::document()
devtools::check()
devtools::use_readme_md()
devtools::build_readme()
devtools::build_readme()
devtools::check()
devtools::document()
vulcan::func_getPalettes_discrete(legendPath = NULL)
vulcan::func_getPalettes_discrete(NULL)
vulcan::func_getPalettes_discrete(NULL)
vulcan::func_getPalettes_discrete(NULL)
devtools::document()
devtools::document()
## 【warning/message】控制RMA是否展示warning/message结果
### T(展示), F(不展示)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message  = F)
## 【fig.show】控制RMD是否/如何展示图片
### 四个选项：
#### asis(默认，图片展示在生成它的代码位置)、hold(图片生成在代码块的末尾)
#### hide(隐藏图片输出)、animate(将生成的多幅图片转换成动画)
knitr::opts_chunk$set(fig.show  = "hide")
## 【fig.height/fig.width】控制图片输出的物理大小
## 【fig.height/fig.width】控制图片输出在最终文件里的显示大小（指定百分比）
knitr::opts_chunk$set(fig.height = 8, fig.width = 8)
knitr::opts_chunk$set(out.height = "100%", out.width = "100%")
knitr::opts_chunk$set(out.height = 2, out.width = "100%")
## 【fig.height/fig.width】控制图片输出的物理大小
## 【fig.height/fig.width】控制图片输出在最终文件里的显示大小（指定百分比）
knitr::opts_chunk$set(fig.height = 8, fig.width = 8)
knitr::opts_chunk$set(out.height = "100%", out.width = "100%")
library(rmdformats)
pilltabs()
install.packages("questionr")
pilltabs()
install.packages(prettydoc)
install.packages("prettydoc")
# Global configuration
## 【eval】控制RMD是否运行代码块
### T(运行)，F（不运行）
knitr::opts_chunk$set(eval = TRUE)
## 【echo】控制RMD是否显示代码块(会展示代码结果)
### T(显示)，F(不显示)
knitr::opts_chunk$set(echo = TRUE)
## 【result】控制RMD是否/如何展示文本
### 四个选项：
#### markup(默认，修饰后输出)、asis(允许使用代码模拟RMD语法)
#### hold(收集代码块运行过程中所有文本，并在最后输出)、hide(隐藏文本输出)
knitr::opts_chunk$set(result = "hide")
## 【include】控制RMD是否隐藏该代码块及其所有输出(不影响运行)
### T(不隐藏), F(隐藏)
knitr::opts_chunk$set(include = TRUE)
## 【warning/message】控制RMD是否展示warning/message结果
### T(展示), F(不展示)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message  = FALSE)
## 【error】控制RMD在发生error时，是否继续执行code
### T(继续执行), F(不继续执行)
knitr::opts_chunk$set(error  = FALSE)
## 【fig.show】控制RMD是否/如何展示图片
### 四个选项：
#### asis(默认，图片展示在生成它的代码位置)、hold(图片生成在代码块的末尾)
#### hide(隐藏图片输出)、animate(将生成的多幅图片转换成动画)
knitr::opts_chunk$set(fig.show  = "hide")
## 【fig.height/fig.width】控制图片输出的物理大小
## 【fig.height/fig.width】控制图片输出在最终文件里的显示大小（指定百分比）
knitr::opts_chunk$set(fig.height = 8, fig.width = 8)
knitr::opts_chunk$set(out.height = "100%", out.width = "100%")
# 测试
getwd()
# 获取模板文件的路径
template_path <- system.file("template.txt", package = "yourPackageName")
# 获取模板文件的路径
template_path <- system.file("./extdata/template_files/main_script.R", package = "vulcan")
is.null(template_path)
# 获取模板文件的路径并检查
template_path <- system.file("./extdata/template_files/main_script.R", package = "vulcan")
if (is.null(template_path) | template_path == "") {
stop("Template file not found in package.")
}
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::build()
pkg_list = list(
CRAN = c("ggplot2", "ggbubr")
)
is.null(pkg_list["CRAN"])
!is.null(pkg_list["CRAn"])
is.null(pkg_list["CRAn"])
pkg_list["CRAn"]
is.null(pkg_list["CRAn"])
is.null(pkg_list["wula"])
pkg_list["wula"]
class(pkg_list["wula"])
tmp = pkg_list["wula"]
View(tmp)
source("D:/BaiduSyncdisk/R/R_pkg_vulcan/vulcan/vulcan/R/func_install.R", echo=TRUE)
tmp = pkg_list["CRAN"]
View(tmp)
length(pkg_list["wula"])
any(pkg_list == "CRAN")
any(names(pkg_list) == "CRAN")
any(names(pkg_list) == "wula")
any(names(pkg_list) == "biocManager")
any(names(pkg_list) == "CRAN")
library(tidyverse)
library(BiocManager)
library(devtools)
pkg_list = list(
CRAN = c("ggplot2", "ggbubr"),
github =c("MRCIEU/TwoSampleMR")
)
if(any(names(pkg_list) == "github")){
pkg = pkg_list["github"]$github
sapply(pkg, simplify = T, function(x){
if(!require(stringr::str_split(x, "/", simplify = T)[,2],character.only=T)){
devtools::install_github(pkg)
require(stringr::str_split(x, "/", simplify = T)[,2],character.only=T)
}})
}
if(any(names(pkg_list) == "github")){
pkg = pkg_list["github"]$github
sapply(pkg, simplify = T, function(x){
devtools::install_github(pkg)
})
}
if(any(names(pkg_list) == "CRAN")){
pkg = pkg_list["CRAN"]$CRAN
sapply(pkg, simplify = T, function(x){
if(!require(x,character.only=T)){
install.packages(x,ask = F,update = F)
require(x,character.only=T)
}})
}
devtools::install_github(pkg, ask = F, update = F)
if(any(names(pkg_list) == "github")){
pkg = pkg_list["github"]$github
sapply(pkg, simplify = T, function(x){
devtools::install_github(pkg, ask = F, update = F)
})
}
if(any(names(pkg_list) == "github")){
pkg = pkg_list["github"]$github
sapply(pkg, simplify = T, function(x){
devtools::install_github(pkg, update = F)
})
}
getOption("repos")
if(any(names(pkg_list) == "github")){
pkg = pkg_list["github"]$github
sapply(pkg, simplify = T, function(x){
devtools::install_github(pkg)
})
}
devtools::document()
devtools::document()
devtools::document()
devtools::build()
library(data.table)
devtools::document()
devtools::build()
devtools::build()
library(data.table)
warning("将在当前项目根目录下，新建log_RMD、log文件夹及项目初始特性表")
template_path = system.file(paste0("./extdata/template_files/", "main_log.rmd"), package = "vulcan")
if (is.null(template_path) | template_path == "") {
stop("Template file not found in package.")
}
devtools::build()
devtools::document()
devtools::document()
devtools::build()
devtools::build()
